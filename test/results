
  Add Certification
uploaded
{
  user_account_id: 'ad3e0429-fd1c-442a-8d95-0a07f3269741',
  cert_name: 'NIIT',
  cert_file: ''
}
POST /user/add-certification 200 8.243 ms - 2
    √ it should add a certification entry (43ms)

  Add Education
POST /user/add-education 200 1.582 ms - 25
    √ it should add an education entry for the user
Executing (default): CREATE TABLE IF NOT EXISTS `Roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): INSERT INTO `Certifications` (`id`,`cert_name`,`cert_file`,`createdAt`,`updatedAt`,`user_account_id`) VALUES (DEFAULT,?,?,?,?,?);

  Add Experience
Executing (default): INSERT INTO `Education` (`id`,`edu_degree`,`edu_programme`,`edu_grade`,`edu_university`,`edu_country`,`edu_start_date`,`edu_end_date`,`edu_project`,`edu_file`,`createdAt`,`updatedAt`,`user_account_id`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SHOW INDEX FROM `Roles` FROM `connect_db`

uploaded
POST /user/update-experience 200 1.682 ms - 25
    √ it should add an experience entry
Executing (default): UPDATE `Experiences` SET `exp_position`=?,`exp_company`=?,`exp_country`=?,`exp_city`=?,`exp_from`=?,`exp_to`=?,`exp_responsibilities`=?,`exp_file`=?,`updatedAt`=? WHERE `user_account_id` = ?

  Add Portfolio
Executing (default): CREATE TABLE IF NOT EXISTS `UserAccounts` (`user_account_id` CHAR(36) BINARY NOT NULL , `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `verified` TINYINT(1), `first_time` TINYINT(1), `blocked` TINYINT(1), `profile_complete_percentage` INTEGER, `approved` TINYINT(1), `token` VARCHAR(255), `email_hash` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `role_id` INTEGER, PRIMARY KEY (`user_account_id`), FOREIGN KEY (`role_id`) REFERENCES `Roles` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
uploaded
Executing (default): SHOW INDEX FROM `UserAccounts` FROM `connect_db`
POST /user/add-portfolio 200 1.522 ms - 25
    √ it should add a portfolio entry
Executing (default): INSERT INTO `Portfolios` (`id`,`portfolio_picture`,`createdAt`,`updatedAt`,`user_account_id`) VALUES (DEFAULT,?,?,?,?);

  Update Profile
Executing (default): CREATE TABLE IF NOT EXISTS `Certifications` (`id` INTEGER NOT NULL auto_increment , `cert_name` VARCHAR(255), `cert_file` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `user_account_id` CHAR(36) BINARY, PRIMARY KEY (`id`), FOREIGN KEY (`user_account_id`) REFERENCES `UserAccounts` (`user_account_id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
uploaded
{
  first_name: 'user',
  last_name: 'one',
  job_title: 'designer',
  availability: 'Fulle-Time',
  golden_paragraph: 'I am an assiduous developer',
  date_of_birth: '1991-08-10',
  gender: 'male',
  country: undefined,
  city: 'Accra',
  email: '',
  country_code: 'Ghana',
  phone: '963014311354',
  picture: ''
}
POST /user/update-profile 200 1.525 ms - 25
    √ it should update user personal details
Executing (default): SHOW INDEX FROM `Certifications` FROM `connect_db`
Executing (default): UPDATE `Users` SET `first_name`=?,`last_name`=?,`job_title`=?,`availability`=?,`golden_paragraph`=?,`date_of_birth`=?,`gender`=?,`city`=?,`country_code`=?,`phone`=?,`updatedAt`=? WHERE `user_account_id` = ?

  Add Skills
Executing (default): CREATE TABLE IF NOT EXISTS `JobCategories` (`id` INTEGER NOT NULL auto_increment , `job_cat_name` VARCHAR(255), `job_cat_picture` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[ 'java', 'python' ]
Executing (default): SHOW INDEX FROM `JobCategories` FROM `connect_db`
Executing (default): SELECT `id`, `user_skills_name`, `createdAt`, `updatedAt`, `user_account_id` FROM `UserSkills` AS `UserSkills` WHERE `UserSkills`.`user_account_id` = 'ad3e0429-fd1c-442a-8d95-0a07f3269741';
Executing (default): INSERT INTO `UserSkills` (`id`,`user_skills_name`,`createdAt`,`updatedAt`,`user_account_id`) VALUES (DEFAULT,?,?,?,?);
Executing (default): INSERT INTO `UserSkills` (`id`,`user_skills_name`,`createdAt`,`updatedAt`,`user_account_id`) VALUES (DEFAULT,?,?,?,?);
POST /user/add-skill 200 40.663 ms - 708
    √ it should add a entries for freelance skills (45ms)

  Sign Up and Log in
    GET Sign Up
GET /signup 200 6.696 ms - 14767
      √ it should get the sign up page
    /POST signup
Executing (default): CREATE TABLE IF NOT EXISTS `Jobs` (`id` INTEGER NOT NULL auto_increment , `job_title` VARCHAR(255), `job_details` VARCHAR(255), `job_timeLength` VARCHAR(255), `job_price` DECIMAL(6,2), `job_status` VARCHAR(255), `job_jobType` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `client_id` CHAR(36) BINARY, `job_category_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`client_id`) REFERENCES `UserAccounts` (`user_account_id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`job_category_id`) REFERENCES `JobCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SELECT `id`, `cert_name`, `cert_file`, `createdAt`, `updatedAt`, `user_account_id` FROM `Certifications` AS `Certification` WHERE `Certification`.`user_account_id` = 'ad3e0429-fd1c-442a-8d95-0a07f3269741' LIMIT 1;
Executing (default): SELECT `user_account_id`, `email`, `password`, `verified`, `first_time`, `blocked`, `profile_complete_percentage`, `approved`, `token`, `email_hash`, `createdAt`, `updatedAt`, `role_id` FROM `UserAccounts` AS `UserAccount` WHERE `UserAccount`.`email` = 'noxwillis@gmail.com';
Executing (default): SELECT `id`, `edu_degree`, `edu_programme`, `edu_grade`, `edu_university`, `edu_city`, `edu_country`, `edu_start_date`, `edu_end_date`, `edu_project`, `edu_file`, `createdAt`, `updatedAt`, `user_account_id` FROM `Education` AS `Education` WHERE `Education`.`user_account_id` = 'ad3e0429-fd1c-442a-8d95-0a07f3269741';
User already exists. Log in
POST /signup 200 18.660 ms - 15085
      √ it should create a user account
Executing (default): SHOW INDEX FROM `Jobs` FROM `connect_db`
added successfully
    GET Log in page
Executing (default): SELECT `UserAccount`.`user_account_id`, `UserAccount`.`email`, `UserAccount`.`password`, `UserAccount`.`verified`, `UserAccount`.`first_time`, `UserAccount`.`blocked`, `UserAccount`.`profile_complete_percentage`, `UserAccount`.`approved`, `UserAccount`.`token`, `UserAccount`.`email_hash`, `UserAccount`.`createdAt`, `UserAccount`.`updatedAt`, `UserAccount`.`role_id`, `Education`.`id` AS `Education.id`, `Education`.`edu_degree` AS `Education.edu_degree`, `Education`.`edu_programme` AS `Education.edu_programme`, `Education`.`edu_grade` AS `Education.edu_grade`, `Education`.`edu_university` AS `Education.edu_university`, `Education`.`edu_city` AS `Education.edu_city`, `Education`.`edu_country` AS `Education.edu_country`, `Education`.`edu_start_date` AS `Education.edu_start_date`, `Education`.`edu_end_date` AS `Education.edu_end_date`, `Education`.`edu_project` AS `Education.edu_project`, `Education`.`edu_file` AS `Education.edu_file`, `Education`.`createdAt` AS `Education.createdAt`, `Education`.`updatedAt` AS `Education.updatedAt`, `Education`.`user_account_id` AS `Education.user_account_id` FROM `UserAccounts` AS `UserAccount` LEFT OUTER JOIN `Education` AS `Education` ON `UserAccount`.`user_account_id` = `Education`.`user_account_id` WHERE `UserAccount`.`user_account_id` = 'ad3e0429-fd1c-442a-8d95-0a07f3269741';
Executing (default): CREATE TABLE IF NOT EXISTS `Chats` (`id` INTEGER NOT NULL auto_increment , `chat_message` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `job_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`job_id`) REFERENCES `Jobs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Chats` FROM `connect_db`
GET /login 200 4.280 ms - 14411
      √ it should get the log in page
Executing (default): CREATE TABLE IF NOT EXISTS `Contracts` (`id` INTEGER NOT NULL auto_increment , `contract_status` VARCHAR(255), `contract_acceptance` VARCHAR(255), `contract_note` VARCHAR(255), `contract_freelance_review` VARCHAR(255), `contract_client_review` VARCHAR(255), `contract_freelance_rating` INTEGER, `contract_client_rating` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `job_id` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`job_id`) REFERENCES `Jobs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
    /POST login
Executing (default): SHOW INDEX FROM `Contracts` FROM `connect_db`
Executing (default): SELECT `UserAccount`.`user_account_id`, `UserAccount`.`email`, `UserAccount`.`password`, `UserAccount`.`verified`, `UserAccount`.`first_time`, `UserAccount`.`blocked`, `UserAccount`.`profile_complete_percentage`, `UserAccount`.`approved`, `UserAccount`.`token`, `UserAccount`.`email_hash`, `UserAccount`.`createdAt`, `UserAccount`.`updatedAt`, `UserAccount`.`role_id`, `User`.`id` AS `User.id`, `User`.`first_name` AS `User.first_name`, `User`.`last_name` AS `User.last_name`, `User`.`job_title` AS `User.job_title`, `User`.`availability` AS `User.availability`, `User`.`golden_paragraph` AS `User.golden_paragraph`, `User`.`gender` AS `User.gender`, `User`.`date_of_birth` AS `User.date_of_birth`, `User`.`country_code` AS `User.country_code`, `User`.`phone` AS `User.phone`, `User`.`country` AS `User.country`, `User`.`city` AS `User.city`, `User`.`picture` AS `User.picture`, `User`.`createdAt` AS `User.createdAt`, `User`.`updatedAt` AS `User.updatedAt`, `User`.`user_account_id` AS `User.user_account_id` FROM `UserAccounts` AS `UserAccount` LEFT OUTER JOIN `Users` AS `User` ON `UserAccount`.`user_account_id` = `User`.`user_account_id` WHERE `UserAccount`.`email` = 'noxwillis@gmail.com';
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `edu_degree` VARCHAR(255), `edu_programme` VARCHAR(255), `edu_grade` VARCHAR(255), `edu_university` VARCHAR(255), `edu_city` VARCHAR(255), `edu_country` VARCHAR(255), `edu_start_date` VARCHAR(255), `edu_end_date` VARCHAR(255), `edu_project` VARCHAR(255), `edu_file` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `user_account_id` CHAR(36) BINARY, PRIMARY KEY (`id`), FOREIGN KEY (`user_account_id`) REFERENCES `UserAccounts` (`user_account_id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
POST /login 200 17.130 ms - 45
      √ it should log a user into his/her account
Executing (default): SHOW INDEX FROM `Education` FROM `connect_db`


  10 passing (315ms)
